package Appium;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.time.Duration;
import java.util.Arrays;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.interactions.Pause;
import org.openqa.selenium.interactions.PointerInput;
import org.openqa.selenium.interactions.Sequence;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.appium.java_client.android.AndroidDriver;

public class SwipeAndScroll 
{

	DesiredCapabilities capabilities;
	AndroidDriver driver;
	
	public void screen_size()
	{
		Dimension size= driver.manage().window().getSize();		
		int center_x= size.height/2;
		int center_y=size.width/2;
		int end_x=center_x;
		int end_y= (int)(center_y * 0.25);
	}

	@BeforeTest
	public void setup() throws MalformedURLException
	{
		capabilities = new DesiredCapabilities();
		capabilities.setCapability("platformName","Android");
		capabilities.setCapability("automationName","uiautomator2");
		capabilities.setCapability("deviceName","AndroidPhone");
		capabilities.setCapability("appPackage","io.appium.android.apis");
		capabilities.setCapability("appActivity","io.appium.android.apis.ApiDemos");
		capabilities.setCapability("platformVersion", "13");
		URL url = URI.create("http://10.0.0.82:4723/").toURL();
		driver = new AndroidDriver(url,capabilities);
	}

	@Test
	public void test_01()
	{
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc=\"Views\"]")).click();
		Dimension size= driver.manage().window().getSize();		
		int center_x= size.width/2;
		int center_y=size.height/2;
		int end_x=center_x;
		int end_y= (int)(center_y * 0.25);
		
		
		PointerInput finger =  new PointerInput(PointerInput.Kind.TOUCH, "finger1");
		Sequence sequence = new Sequence(finger,1)
							.addAction(finger.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), center_x,center_y))
							.addAction(finger.createPointerDown(PointerInput.MouseButton.LEFT.asArg()))
							.addAction(new Pause(finger, Duration.ofMillis(250)))
							.addAction(finger.createPointerMove(Duration.ZERO,PointerInput.Origin.viewport(),end_x,end_y))
							.addAction(finger.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));
		driver.perform(Arrays.asList(sequence));
		

	}
	@Test
	public void test_02()
	{
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc=\"Views\"]")).click();
		Dimension size = driver.manage().window().getSize();
		
		//find the position where you need to touch
		int startX = size.getWidth() / 2;
		int startY = size.getHeight() / 2;
		
		//position till you want to move your finger to swipe
		int endX = startX;
		int endY = (int) (size.getHeight() * 0.25);
		
		//PointerInput class to create a sequence of actions 
		PointerInput finger1 = new PointerInput(PointerInput.Kind.TOUCH, "finger1");
		
		//Sequence object, which is a list of actions that will be performed on the device
		Sequence sequence = new Sequence(finger1, 1)
				.addAction(finger1.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), startX, startY))
				.addAction(finger1.createPointerDown(PointerInput.MouseButton.LEFT.asArg()))
				.addAction(new Pause(finger1, Duration.ofMillis(200))) //wait for some time
				.addAction(finger1.createPointerMove(Duration.ofMillis(100), PointerInput.Origin.viewport(), endX, endY))
				.addAction(finger1.createPointerUp(PointerInput.MouseButton.LEFT.asArg())); 

		//perform the Sequence of action
		driver.perform(Arrays.asList(sequence));
	}
	@AfterTest

	public void teardown() throws InterruptedException
	{
		Thread.sleep(3500);
		driver.quit();
	}



}
